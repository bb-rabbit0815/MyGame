namespace fbs;

struct UUID
{
    upper: long;
    lower: long;
}

enum Sex: byte
{
    None,       // 不明
    Male,       // 男
    Woman,      // 女
    Futanari,   // ふたなり
}

enum Species: byte
{
    None,       // 不明
    Human,      // 人間
    Beastman,   // 獣人
    Dwarf,      // ドワーフ
    Elf,        // エルフ
}

enum SkillType: byte
{
    Active,
    Passive,
}

enum GeneticSkillType: byte
{
    Status,
    Buff,
    Debuff,
}

struct CharctorParameters
{
    level:int;      // レベル
    helth:int;      // 健康度
    appearance:int; // 外見レベル
    age:int;        // 年齢
    infection_resistance:float; // 感染耐性
    health_recovery_speed:int;  // 回復量
}

struct Sensitivity
{
    mouth:int;      // 口
    nipple:int;     // 乳首
    boobs:int;      // 胸
    clitris:int;    // クリトリス
    vagina:int;     // 膣
    anus:int;       // 肛門
    penis:int;      // 陰茎
    scrotum:int;    // 金玉
    prostate:int;   // 前立腺
}

struct GeneticSkill
{
    id:int;
    level:int;
    genetic_skill_type: GeneticSkillType;
}

table Character
{
    unique_id: UUID; // UUID
    name:string;
    sex:Sex;
    species: Species;
    max_parameters:CharctorParameters;
    parameters:CharctorParameters;
    max_sensitivity:Sensitivity;
    sensitivity:Sensitivity;
    genetic_skills:[GeneticSkill];
}

root_type Character;