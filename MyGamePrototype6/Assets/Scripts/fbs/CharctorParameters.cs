// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fbs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharctorParameters : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public CharctorParameters __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Level { get { return __p.bb.GetInt(__p.bb_pos + 0); } }
  public int Helth { get { return __p.bb.GetInt(__p.bb_pos + 4); } }
  public int Appearance { get { return __p.bb.GetInt(__p.bb_pos + 8); } }
  public int Age { get { return __p.bb.GetInt(__p.bb_pos + 12); } }
  public float InfectionResistance { get { return __p.bb.GetFloat(__p.bb_pos + 16); } }
  public int HealthRecoverySpeed { get { return __p.bb.GetInt(__p.bb_pos + 20); } }

  public static Offset<fbs.CharctorParameters> CreateCharctorParameters(FlatBufferBuilder builder, int Level, int Helth, int Appearance, int Age, float InfectionResistance, int HealthRecoverySpeed) {
    builder.Prep(4, 24);
    builder.PutInt(HealthRecoverySpeed);
    builder.PutFloat(InfectionResistance);
    builder.PutInt(Age);
    builder.PutInt(Appearance);
    builder.PutInt(Helth);
    builder.PutInt(Level);
    return new Offset<fbs.CharctorParameters>(builder.Offset);
  }
}


}
