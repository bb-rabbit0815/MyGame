// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fbs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Facility : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Facility GetRootAsFacility(ByteBuffer _bb) { return GetRootAsFacility(_bb, new Facility()); }
  public static Facility GetRootAsFacility(ByteBuffer _bb, Facility obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyFacility(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, FacilityVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Facility __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public fbs.UUID? UniqueId { get { int o = __p.__offset(4); return o != 0 ? (fbs.UUID?)(new fbs.UUID()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public fbs.FaciityId FacilityId { get { int o = __p.__offset(6); return o != 0 ? (fbs.FaciityId)__p.bb.GetShort(o + __p.bb_pos) : fbs.FaciityId.None; } }
  public int Level { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public fbs.UUID? AssginedSlaves(int j) { int o = __p.__offset(10); return o != 0 ? (fbs.UUID?)(new fbs.UUID()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int AssginedSlavesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public fbs.UUID? AssginedGuests(int j) { int o = __p.__offset(12); return o != 0 ? (fbs.UUID?)(new fbs.UUID()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int AssginedGuestsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public fbs.FacilityCoordinate? Coordinate(int j) { int o = __p.__offset(14); return o != 0 ? (fbs.FacilityCoordinate?)(new fbs.FacilityCoordinate()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int CoordinateLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static void StartFacility(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddUniqueId(FlatBufferBuilder builder, Offset<fbs.UUID> uniqueIdOffset) { builder.AddStruct(0, uniqueIdOffset.Value, 0); }
  public static void AddFacilityId(FlatBufferBuilder builder, fbs.FaciityId facilityId) { builder.AddShort(1, (short)facilityId, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(2, level, 0); }
  public static void AddAssginedSlaves(FlatBufferBuilder builder, VectorOffset assginedSlavesOffset) { builder.AddOffset(3, assginedSlavesOffset.Value, 0); }
  public static void StartAssginedSlavesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 8); }
  public static void AddAssginedGuests(FlatBufferBuilder builder, VectorOffset assginedGuestsOffset) { builder.AddOffset(4, assginedGuestsOffset.Value, 0); }
  public static void StartAssginedGuestsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 8); }
  public static void AddCoordinate(FlatBufferBuilder builder, VectorOffset coordinateOffset) { builder.AddOffset(5, coordinateOffset.Value, 0); }
  public static void StartCoordinateVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static Offset<fbs.Facility> EndFacility(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fbs.Facility>(o);
  }
  public static void FinishFacilityBuffer(FlatBufferBuilder builder, Offset<fbs.Facility> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedFacilityBuffer(FlatBufferBuilder builder, Offset<fbs.Facility> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class FacilityVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*UniqueId*/, 16 /*fbs.UUID*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*FacilityId*/, 2 /*fbs.FaciityId*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Level*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*AssginedSlaves*/, 16 /*fbs.UUID*/, false)
      && verifier.VerifyVectorOfData(tablePos, 12 /*AssginedGuests*/, 16 /*fbs.UUID*/, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*Coordinate*/, 8 /*fbs.FacilityCoordinate*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
