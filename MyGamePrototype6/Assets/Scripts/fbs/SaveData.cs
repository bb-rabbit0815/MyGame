// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fbs
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SaveData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SaveData GetRootAsSaveData(ByteBuffer _bb) { return GetRootAsSaveData(_bb, new SaveData()); }
  public static SaveData GetRootAsSaveData(ByteBuffer _bb, SaveData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifySaveData(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, SaveDataVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SaveData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public fbs.Brothel? Brothel { get { int o = __p.__offset(4); return o != 0 ? (fbs.Brothel?)(new fbs.Brothel()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<fbs.SaveData> CreateSaveData(FlatBufferBuilder builder,
      Offset<fbs.Brothel> brothelOffset = default(Offset<fbs.Brothel>)) {
    builder.StartTable(1);
    SaveData.AddBrothel(builder, brothelOffset);
    return SaveData.EndSaveData(builder);
  }

  public static void StartSaveData(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddBrothel(FlatBufferBuilder builder, Offset<fbs.Brothel> brothelOffset) { builder.AddOffset(0, brothelOffset.Value, 0); }
  public static Offset<fbs.SaveData> EndSaveData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<fbs.SaveData>(o);
  }
  public static void FinishSaveDataBuffer(FlatBufferBuilder builder, Offset<fbs.SaveData> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedSaveDataBuffer(FlatBufferBuilder builder, Offset<fbs.SaveData> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class SaveDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Brothel*/, fbs.BrothelVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
